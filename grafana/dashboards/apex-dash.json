{
    "annotations": {
      "list": [
        {
          "builtIn": 1,
          "datasource": {
            "type": "grafana",
            "uid": "-- Grafana --"
          },
          "enable": true,
          "hide": true,
          "iconColor": "rgba(0, 211, 255, 1)",
          "name": "Annotations & Alerts",
          "type": "dashboard"
        }
      ]
    },
    "editable": true,
    "fiscalYearStartMonth": 0,
    "graphTooltip": 0,
    "id": 1,
    "links": [],
    "panels": [
      {
        "datasource": {
          "type": "influxdb",
          "uid": "f1-influx-ds"
        },
        "fieldConfig": {
          "defaults": {
            "color": {
              "mode": "thresholds"
            },
            "mappings": [],
            "thresholds": {
              "mode": "absolute",
              "steps": [
                {
                  "color": "green",
                  "value": null
                },
                {
                  "color": "red",
                  "value": 120
                }
              ]
            },
            "unit": "celsius"
          },
          "overrides": []
        },
        "gridPos": {
          "h": 5,
          "w": 6,
          "x": 0,
          "y": 0
        },
        "id": 5,
        "options": {
          "colorMode": "value",
          "graphMode": "none",
          "justifyMode": "auto",
          "orientation": "horizontal",
          "reduceOptions": {
            "calcs": [
              "lastNotNull"
            ],
            "fields": "",
            "values": false
          },
          "showPercentChange": false,
          "textMode": "auto",
          "wideLayout": true
        },
        "pluginVersion": "10.4.2",
        "targets": [
          {
            "datasource": {
              "type": "influxdb",
              "uid": "f1-influx-ds"
            },
            "query": "from(bucket: \"f1-telemetry\")\r\n  |> range(start: v.timeRangeStart, stop: v.timeRangeStop)\r\n  |> filter(fn: (r) => r[\"_measurement\"] == \"CarTelemetry\")\r\n  |> filter(fn: (r) => r[\"isPlayer\"] == \"true\")\r\n  |> filter(fn: (r) => r._field == \"engineTemperature\")\r\n  |> aggregateWindow(every: v.windowPeriod, fn: mean, createEmpty: false)\r\n  |> map(fn: (r) => ({ r with _field: \"Engine\" }))\r\n  |> keep(columns: [\"_time\", \"_value\", \"_field\"])\r\n  |> yield(name: \"mean\")",
            "refId": "A"
          }
        ],
        "title": "Engine Temperature",
        "type": "stat"
      },
      {
        "datasource": {
          "type": "influxdb",
          "uid": "f1-influx-ds"
        },
        "fieldConfig": {
          "defaults": {
            "color": {
              "mode": "thresholds"
            },
            "mappings": [],
            "thresholds": {
              "mode": "absolute",
              "steps": [
                {
                  "color": "green",
                  "value": null
                },
                {
                  "color": "red",
                  "value": 950
                }
              ]
            },
            "unit": "celsius"
          },
          "overrides": []
        },
        "gridPos": {
          "h": 5,
          "w": 6,
          "x": 6,
          "y": 0
        },
        "id": 4,
        "options": {
          "displayMode": "basic",
          "maxVizHeight": 300,
          "minVizHeight": 16,
          "minVizWidth": 8,
          "namePlacement": "auto",
          "orientation": "vertical",
          "reduceOptions": {
            "calcs": [
              "lastNotNull"
            ],
            "fields": "",
            "values": false
          },
          "showUnfilled": true,
          "sizing": "auto",
          "valueMode": "color"
        },
        "pluginVersion": "10.4.2",
        "targets": [
          {
            "datasource": {
              "type": "influxdb",
              "uid": "f1-influx-ds"
            },
            "query": "from(bucket: \"f1-telemetry\")\r\n  |> range(start: v.timeRangeStart, stop: v.timeRangeStop)\r\n  |> filter(fn: (r) => r[\"_measurement\"] == \"CarTelemetry\")\r\n  |> filter(fn: (r) => r[\"isPlayer\"] == \"true\")\r\n  |> filter(fn: (r) => r._field =~ /^brakesTemperature/)\r\n  |> aggregateWindow(every: v.windowPeriod, fn: mean, createEmpty: false)\r\n  |> map(fn: (r) => ({\r\n      r with\r\n      _field:\r\n        if r._field == \"brakesTemperatureFL\" then \"FL\"\r\n        else if r._field == \"brakesTemperatureFR\" then \"FR\"\r\n        else if r._field == \"brakesTemperatureRL\" then \"RL\"\r\n        else if r._field == \"brakesTemperatureRR\" then \"RR\"\r\n        else r._field\r\n    }))\r\n  |> keep(columns: [\"_time\", \"_value\", \"_field\"])\r\n  |> yield(name: \"mean\")",
            "refId": "A"
          }
        ],
        "title": "Brake Temperature",
        "type": "bargauge"
      },
      {
        "datasource": {
          "type": "influxdb",
          "uid": "f1-influx-ds"
        },
        "fieldConfig": {
          "defaults": {
            "color": {
              "mode": "thresholds"
            },
            "fieldMinMax": false,
            "mappings": [],
            "thresholds": {
              "mode": "absolute",
              "steps": [
                {
                  "color": "green",
                  "value": null
                }
              ]
            },
            "unit": "clockms"
          },
          "overrides": []
        },
        "gridPos": {
          "h": 5,
          "w": 12,
          "x": 12,
          "y": 0
        },
        "id": 8,
        "options": {
          "colorMode": "value",
          "graphMode": "none",
          "justifyMode": "center",
          "orientation": "auto",
          "reduceOptions": {
            "calcs": [
              "lastNotNull"
            ],
            "fields": "",
            "values": false
          },
          "showPercentChange": false,
          "text": {
            "valueSize": 70
          },
          "textMode": "auto",
          "wideLayout": true
        },
        "pluginVersion": "10.4.2",
        "targets": [
          {
            "datasource": {
              "type": "influxdb",
              "uid": "f1-influx-ds"
            },
            "query": "from(bucket: \"f1-telemetry\")\r\n  |> range(start: v.timeRangeStart, stop: v.timeRangeStop)\r\n  |> filter(fn: (r) => r[\"_measurement\"] == \"LapData\")\r\n  |> filter(fn: (r) => r[\"_field\"] == \"lastLapTimeInMS\")\r\n  |> filter(fn: (r) => r[\"isPlayer\"] == \"true\")\r\n  |> filter(fn: (r) => r._value > 0)\r\n  |> sort(columns: [\"_time\"], desc: true) \r\n  |> limit(n: 1)",
            "refId": "A"
          }
        ],
        "title": "Last Lap Time",
        "type": "stat"
      },
      {
        "datasource": {
          "type": "influxdb",
          "uid": "f1-influx-ds"
        },
        "fieldConfig": {
          "defaults": {
            "color": {
              "mode": "palette-classic"
            },
            "custom": {
              "axisBorderShow": false,
              "axisCenteredZero": false,
              "axisColorMode": "text",
              "axisLabel": "",
              "axisPlacement": "auto",
              "barAlignment": 0,
              "drawStyle": "line",
              "fillOpacity": 0,
              "gradientMode": "none",
              "hideFrom": {
                "legend": false,
                "tooltip": false,
                "viz": false
              },
              "insertNulls": false,
              "lineInterpolation": "smooth",
              "lineWidth": 1,
              "pointSize": 5,
              "scaleDistribution": {
                "type": "linear"
              },
              "showPoints": "auto",
              "spanNulls": true,
              "stacking": {
                "group": "A",
                "mode": "none"
              },
              "thresholdsStyle": {
                "mode": "off"
              }
            },
            "mappings": [],
            "thresholds": {
              "mode": "absolute",
              "steps": [
                {
                  "color": "green",
                  "value": null
                },
                {
                  "color": "red",
                  "value": 80
                }
              ]
            }
          },
          "overrides": []
        },
        "gridPos": {
          "h": 7,
          "w": 24,
          "x": 0,
          "y": 5
        },
        "id": 1,
        "options": {
          "legend": {
            "calcs": [],
            "displayMode": "list",
            "placement": "right",
            "showLegend": true
          },
          "tooltip": {
            "mode": "multi",
            "sort": "desc"
          }
        },
        "targets": [
          {
            "datasource": {
              "type": "influxdb",
              "uid": "f1-influx-ds"
            },
            "query": "speeds = from(bucket: \"f1-telemetry\")\r\n    |> range(start: v.timeRangeStart, stop: v.timeRangeStop)\r\n    |> filter(fn: (r) => r._measurement == \"CarTelemetry\" and r._field == \"speed\")\r\n    |> aggregateWindow(every: v.windowPeriod, fn: mean, createEmpty: false)\r\n\r\nnames = from(bucket: \"f1-telemetry\")\r\n    |> range(start: v.timeRangeStart, stop: v.timeRangeStop)\r\n    |> filter(fn: (r) => r._measurement == \"Participants\" and r._field == \"name\")\r\n    |> last()\r\n    |> keep(columns: [\"carIndex\", \"_value\"])\r\n    |> rename(columns: {_value: \"driverName\"})\r\n\r\njoin(tables: {s: speeds, n: names}, on: [\"carIndex\"])\r\n    // THIS IS THE FIX: Keep only the essential columns before pivoting.\r\n    // This removes the extra tags that were cluttering the legend.\r\n    |> keep(columns: [\"_time\", \"_value\", \"driverName\"])\r\n    |> pivot(rowKey:[\"_time\"], columnKey: [\"driverName\"], valueColumn: \"_value\")\r\n    |> yield(name: \"All Car Speeds\")",
            "refId": "A"
          }
        ],
        "title": "Speed",
        "type": "timeseries"
      },
      {
        "datasource": {
          "type": "influxdb",
          "uid": "f1-influx-ds"
        },
        "fieldConfig": {
          "defaults": {
            "color": {
              "mode": "palette-classic"
            },
            "custom": {
              "axisBorderShow": false,
              "axisCenteredZero": false,
              "axisColorMode": "text",
              "axisLabel": "",
              "axisPlacement": "auto",
              "barAlignment": 0,
              "drawStyle": "line",
              "fillOpacity": 0,
              "gradientMode": "none",
              "hideFrom": {
                "legend": false,
                "tooltip": false,
                "viz": false
              },
              "insertNulls": false,
              "lineInterpolation": "smooth",
              "lineStyle": {
                "fill": "solid"
              },
              "lineWidth": 1,
              "pointSize": 5,
              "scaleDistribution": {
                "type": "linear"
              },
              "showPoints": "auto",
              "spanNulls": true,
              "stacking": {
                "group": "A",
                "mode": "none"
              },
              "thresholdsStyle": {
                "mode": "off"
              }
            },
            "mappings": [],
            "max": 1,
            "min": 0,
            "thresholds": {
              "mode": "absolute",
              "steps": [
                {
                  "color": "green",
                  "value": null
                }
              ]
            },
            "unit": "percentunit"
          },
          "overrides": []
        },
        "gridPos": {
          "h": 5,
          "w": 18,
          "x": 0,
          "y": 12
        },
        "id": 3,
        "options": {
          "legend": {
            "calcs": [],
            "displayMode": "list",
            "placement": "right",
            "showLegend": true
          },
          "tooltip": {
            "mode": "multi",
            "sort": "desc"
          }
        },
        "targets": [
          {
            "datasource": {
              "type": "influxdb",
              "uid": "f1-influx-ds"
            },
            "query": "inputs = from(bucket: \"f1-telemetry\")\r\n    |> range(start: v.timeRangeStart, stop: v.timeRangeStop)\r\n    |> filter(fn: (r) => r._measurement == \"CarTelemetry\")\r\n    |> filter(fn: (r) => r._field == \"throttle\" or r._field == \"brake\")\r\n    |> aggregateWindow(every: v.windowPeriod, fn: mean, createEmpty: false)\r\n\r\nnames = from(bucket: \"f1-telemetry\")\r\n    |> range(start: v.timeRangeStart, stop: v.timeRangeStop)\r\n    |> filter(fn: (r) => r._measurement == \"Participants\" and r._field == \"name\")\r\n    |> last()\r\n    |> keep(columns: [\"carIndex\", \"_value\"])\r\n    |> rename(columns: {_value: \"driverName\"})\r\n\r\njoin(tables: {data: inputs, names: names}, on: [\"carIndex\"])\r\n    |> keep(columns: [\"_time\", \"_value\", \"_field\", \"driverName\"])\r\n    |> pivot(rowKey:[\"_time\"], columnKey: [\"driverName\", \"_field\"], valueColumn: \"_value\")\r\n    |> yield(name: \"Throttle and Brake\")",
            "refId": "A"
          }
        ],
        "title": "Throttle / Brake",
        "transformations": [
          {
            "id": "renameByRegex",
            "options": {
              "regex": "(.*)_(.*)",
              "renamePattern": "$1 ($2)"
            }
          }
        ],
        "type": "timeseries"
      },
      {
        "datasource": {
          "type": "influxdb",
          "uid": "f1-influx-ds"
        },
        "fieldConfig": {
          "defaults": {
            "color": {
              "mode": "thresholds"
            },
            "fieldMinMax": false,
            "mappings": [],
            "thresholds": {
              "mode": "absolute",
              "steps": [
                {
                  "color": "green",
                  "value": null
                },
                {
                  "color": "red",
                  "value": 110
                }
              ]
            },
            "unit": "celsius"
          },
          "overrides": []
        },
        "gridPos": {
          "h": 5,
          "w": 6,
          "x": 18,
          "y": 12
        },
        "id": 6,
        "options": {
          "displayMode": "basic",
          "maxVizHeight": 300,
          "minVizHeight": 16,
          "minVizWidth": 8,
          "namePlacement": "auto",
          "orientation": "auto",
          "reduceOptions": {
            "calcs": [
              "lastNotNull"
            ],
            "fields": "",
            "values": false
          },
          "showUnfilled": true,
          "sizing": "auto",
          "valueMode": "color"
        },
        "pluginVersion": "10.4.2",
        "targets": [
          {
            "datasource": {
              "type": "influxdb",
              "uid": "f1-influx-ds"
            },
            "query": "from(bucket: \"f1-telemetry\")\r\n  |> range(start: v.timeRangeStart, stop: v.timeRangeStop)\r\n  |> filter(fn: (r) => r[\"_measurement\"] == \"CarTelemetry\")\r\n  |> filter(fn: (r) => r[\"isPlayer\"] == \"true\")\r\n  |> filter(fn: (r) => r._field =~ /^tyresSurfaceTemperature/)\r\n  |> aggregateWindow(every: v.windowPeriod, fn: mean, createEmpty: false)\r\n  |> map(fn: (r) => ({\r\n      r with\r\n      _field:\r\n        if r._field == \"tyresSurfaceTemperatureFL\" then \"FL\"\r\n        else if r._field == \"tyresSurfaceTemperatureFR\" then \"FR\"\r\n        else if r._field == \"tyresSurfaceTemperatureRL\" then \"RL\"\r\n        else if r._field == \"tyresSurfaceTemperatureRR\" then \"RR\"\r\n        else r._field\r\n    }))\r\n  |> keep(columns: [\"_time\", \"_value\", \"_field\"])\r\n  |> yield(name: \"mean\")",
            "refId": "A"
          }
        ],
        "title": "Tyre Surface Temperatures",
        "type": "bargauge"
      },
      {
        "datasource": {
          "type": "influxdb",
          "uid": "f1-influx-ds"
        },
        "fieldConfig": {
          "defaults": {
            "color": {
              "mode": "palette-classic"
            },
            "custom": {
              "axisBorderShow": false,
              "axisCenteredZero": false,
              "axisColorMode": "text",
              "axisLabel": "",
              "axisPlacement": "auto",
              "barAlignment": 0,
              "drawStyle": "line",
              "fillOpacity": 0,
              "gradientMode": "none",
              "hideFrom": {
                "legend": false,
                "tooltip": false,
                "viz": false
              },
              "insertNulls": false,
              "lineInterpolation": "stepBefore",
              "lineWidth": 1,
              "pointSize": 5,
              "scaleDistribution": {
                "type": "linear"
              },
              "showPoints": "auto",
              "spanNulls": true,
              "stacking": {
                "group": "A",
                "mode": "none"
              },
              "thresholdsStyle": {
                "mode": "off"
              }
            },
            "mappings": [],
            "max": 8,
            "min": -1,
            "thresholds": {
              "mode": "absolute",
              "steps": [
                {
                  "color": "green",
                  "value": null
                },
                {
                  "color": "red",
                  "value": 80
                }
              ]
            }
          },
          "overrides": []
        },
        "gridPos": {
          "h": 5,
          "w": 18,
          "x": 0,
          "y": 17
        },
        "id": 2,
        "options": {
          "legend": {
            "calcs": [],
            "displayMode": "list",
            "placement": "right",
            "showLegend": true
          },
          "tooltip": {
            "mode": "single",
            "sort": "none"
          }
        },
        "targets": [
          {
            "datasource": {
              "type": "influxdb",
              "uid": "f1-influx-ds"
            },
            "query": "gears = from(bucket: \"f1-telemetry\")\r\n    |> range(start: v.timeRangeStart, stop: v.timeRangeStop)\r\n    |> filter(fn: (r) => r._measurement == \"CarTelemetry\" and r._field == \"gear\")\r\n    |> aggregateWindow(every: v.windowPeriod, fn: last, createEmpty: false)\r\n    // FIX: Explicitly cast the gear value to an integer to prevent type issues.\r\n    |> toInt()\r\n\r\nnames = from(bucket: \"f1-telemetry\")\r\n    |> range(start: v.timeRangeStart, stop: v.timeRangeStop)\r\n    |> filter(fn: (r) => r._measurement == \"Participants\" and r._field == \"name\")\r\n    |> last()\r\n    |> keep(columns: [\"carIndex\", \"_value\"])\r\n    |> rename(columns: {_value: \"driverName\"})\r\n\r\njoin(tables: {g: gears, n: names}, on: [\"carIndex\"])\r\n    |> keep(columns: [\"_time\", \"_value\", \"driverName\"])\r\n    |> pivot(rowKey:[\"_time\"], columnKey: [\"driverName\"], valueColumn: \"_value\")\r\n    |> yield(name: \"All Car Gears\")",
            "refId": "A"
          }
        ],
        "title": "Gear",
        "type": "timeseries"
      },
      {
        "datasource": {
          "type": "influxdb",
          "uid": "f1-influx-ds"
        },
        "fieldConfig": {
          "defaults": {
            "color": {
              "mode": "thresholds"
            },
            "mappings": [],
            "thresholds": {
              "mode": "absolute",
              "steps": [
                {
                  "color": "green",
                  "value": null
                },
                {
                  "color": "red",
                  "value": 110
                }
              ]
            },
            "unit": "celsius"
          },
          "overrides": []
        },
        "gridPos": {
          "h": 5,
          "w": 6,
          "x": 18,
          "y": 17
        },
        "id": 7,
        "options": {
          "displayMode": "basic",
          "maxVizHeight": 300,
          "minVizHeight": 16,
          "minVizWidth": 8,
          "namePlacement": "auto",
          "orientation": "auto",
          "reduceOptions": {
            "calcs": [
              "lastNotNull"
            ],
            "fields": "",
            "values": false
          },
          "showUnfilled": true,
          "sizing": "auto",
          "valueMode": "color"
        },
        "pluginVersion": "10.4.2",
        "targets": [
          {
            "datasource": {
              "type": "influxdb",
              "uid": "f1-influx-ds"
            },
            "query": "from(bucket: \"f1-telemetry\")\r\n  |> range(start: v.timeRangeStart, stop: v.timeRangeStop)\r\n  |> filter(fn: (r) => r[\"_measurement\"] == \"CarTelemetry\")\r\n  |> filter(fn: (r) => r[\"isPlayer\"] == \"true\")\r\n  |> filter(fn: (r) => r._field =~ /^tyresInnerTemperature/)\r\n  |> aggregateWindow(every: v.windowPeriod, fn: mean, createEmpty: false)\r\n  |> map(fn: (r) => ({\r\n      r with\r\n      _field:\r\n        if r._field == \"tyresInnerTemperatureFL\" then \"FL\"\r\n        else if r._field == \"tyresInnerTemperatureFR\" then \"FR\"\r\n        else if r._field == \"tyresInnerTemperatureRL\" then \"RL\"\r\n        else if r._field == \"tyresInnerTemperatureRR\" then \"RR\"\r\n        else r._field\r\n    }))\r\n  |> keep(columns: [\"_time\", \"_value\", \"_field\"])\r\n  |> yield(name: \"mean\")",
            "refId": "A"
          }
        ],
        "title": "Tyre Inner Temperatures",
        "type": "bargauge"
      }
    ],
    "refresh": "auto",
    "schemaVersion": 39,
    "tags": [],
    "templating": {
      "list": []
    },
    "time": {
      "from": "now-1m",
      "to": "now"
    },
    "timepicker": {},
    "timezone": "browser",
    "title": "F1 Tele Data",
    "uid": "derqbz323mrk0a",
    "version": 4,
    "weekStart": ""
  }